# шпаргалка по shell

 python manage.py shell -> Сделать импорт библиотек

 Создать двух пользователей (с помощью метода User.objects.create_user('username')).

>>u1 = User.objects.create(username='User1')
>>u2 = User.objects.create(username='User2')

Создать два объекта модели Author, связанные с пользователями.

>>Author.objects.create(authorUser=u1)
>>Author.objects.create(authorUser=u2)

Добавить  категории в модель Category.

>>Category.objects.create(name='PC')
>>Category.objects.create(name='Мобильные')
>>Category.objects.create(name='ММО')
>>Category.objects.create(name='Фановые')
>>Category.objects.create(name='Киберспорт')
>>Category.objects.create(name='Индустрия')

Добавить статьи и новость.
>>au1 = Author.objects.get(id=1)
>>au2 = Author.objects.get(id=2)
>>Post.objects.create(author=au1  , categoryType= 'AR', title='The article of the first author ', text='')
>>Post.objects.create(author=au2  , categoryType= 'AR', title='The article of the second author ', text='')
>>Post.objects.create(author=au2  , categoryType= 'NW', title='The news of the second author ', text='')

>>Post.objects.get(id=2).preview()

Присвоить им категории.
>>	Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))
>>	Post.objects.get(id=1).postCategory.add(Category.objects.get(id=3))
>>	Post.objects.get(id=2).postCategory.add(Category.objects.get(id=4))

Создать комментарий к разным объектам модели Post.

>>Comment.objects.create(commentPost=Post.objects.get(id=1), userPost=Author.objects.get(id=1).authorUser, text='')
>>Comment.objects.create(commentPost=Post.objects.get(id=1), userPost=Author.objects.get(id=2).authorUser, text='')
>>Comment.objects.create(commentPost=Post.objects.get(id=2), userPost=Author.objects.get(id=1).authorUser, text='')
>>Comment.objects.create(commentPost=Post.objects.get(id=2), userPost=Author.objects.get(id=2).authorUser, text='')

Применяя функции like() и dislike().

>>Post.objects.get(id=1).like()
>>Post.objects.get(id=1).dislike()
>>Post.objects.get(id=2).like()
>>Post.objects.get(id=2).dislike()

>>Comment.objects.get(id=1).like()
>>Comment.objects.get(id=1).dislike()
>>Comment.objects.get(id=2).like()
>>Comment.objects.get(id=2).dislike()

>>Comment.objects.get(id=3).like()
>>Comment.objects.get(id=3).dislike()

>>Comment.objects.get(id=2).rating

Обновить рейтинги пользователей.

>>a1 = Author.objects.get(id=1)
>>a1.update_rating()

Вывести username и рейтинг лучшего пользователя

>>a1.ratingAuthor
>>a1.post_set.all().values('rating')
>>a1.authorUser.comment_set.all().values('rating')

>>a2 = Author.objects.all().order_by('-ratingAuthor')[:1]
>>a2
>>for b in a2:
		b.authorUser.username
		b.ratingAuthor

Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.

>>a3 = Post.objects.all().order_by('-rating')[:1]
>>for j in a3:
	f"Data : {j.dataCreations.day}"
	f"Rating: {j.rating}"
	j.author.authorUser
	j.title
	j.preview()


Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

>>a4 = Comment.objects.all().filter(commentPost=a3)
>>for d in a4:
	F"Data : {d.dataCreation.day}/{d.dataCreation.month}/{d.dataCreation.year}"
	d.userPost
	F"Rating : {d.rating}"
	d.text